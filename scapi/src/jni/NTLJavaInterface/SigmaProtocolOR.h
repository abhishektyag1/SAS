/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver */

#ifndef _Included_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple
#define _Included_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    initField
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_initField
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    createRandomFieldElements
 * Signature: (I[J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_createRandomFieldElements
  (JNIEnv *, jobject, jint, jlongArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    interpolate
 * Signature: (I[B[J[I)J
 */
JNIEXPORT jlong JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_interpolate
  (JNIEnv *, jobject, jbyteArray, jlongArray, jintArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    getRestChallenges
 * Signature: (J[II)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_getRestChallenges
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    getPolynomialBytes
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_getPolynomialBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleProver
 * Method:    deletePointers
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleProverComputation_deletePointers
  (JNIEnv *, jobject, jlong, jlongArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleVerifier
 * Method:    initField
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleVerifierComputation_initField
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleVerifier
 * Method:    sampleChallenge
 * Signature: ([J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleVerifierComputation_sampleChallenge
  (JNIEnv *, jobject, jlongArray);


/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleVerifierComputation
 * Method:    setChallenge
 * Signature: ([J[B)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleVerifierComputation_setChallenge
  (JNIEnv *, jobject, jlongArray, jbyteArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleVerifier
 * Method:    checkPolynomialValidity
 * Signature: ([[BIJ[[BI)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleVerifierComputation_checkPolynomialValidity
  (JNIEnv *, jobject, jobjectArray, jint, jlong, jobjectArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    initField
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_initField
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    createRandomFieldElements
 * Signature: (I[J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_createRandomFieldElements
  (JNIEnv *, jobject, jint, jlongArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    interpolate
 * Signature: (I[B[J[I)J
 */
JNIEXPORT jlong JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_interpolate
  (JNIEnv *, jobject, jbyteArray, jlongArray, jintArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    getRestChallenges
 * Signature: (JIII[I)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_getRestChallenges
  (JNIEnv *, jobject, jlong, jint, jint, jintArray);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    getPolynomialBytes
 * Signature: (J)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_getPolynomialBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     edu_biu_scapi_interactiveMidProtocols_SigmaProtocol_orMultiple_SigmaORMultipleSimulator
 * Method:    deletePointers
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_interactiveMidProtocols_sigmaProtocol_orMultiple_SigmaORMultipleSimulator_deletePointers
  (JNIEnv *, jobject, jlong, jlongArray);


void initField(jint t, jint randomNum);
jobjectArray sampleRandomFieldElements(JNIEnv * env, jint numElements, jlongArray pointerToElements);
jlong interpolate(JNIEnv * env, jbyteArray challenge, jlongArray fieldElements, jintArray sampledIndexes);
jobjectArray calcRestChallenges(JNIEnv *env, jlong polynomial, jintArray indexesInI);
jobjectArray calcPolynomialBytes(JNIEnv *env, jlong poly);
void deleteMemory(JNIEnv *env, jlong polynomial, jlongArray fieldElements);
GF2EX createPolynomial(JNIEnv *env, jobjectArray polynomialBytes);
void convertGF2EToBytes(GF2E element, jbyte* byteArr);
GF2E convertBytesToGF2E(JNIEnv * env, jbyteArray byteArr);
GF2E generateIndexPolynomial(int i);

#ifdef __cplusplus
}
#endif
#endif
